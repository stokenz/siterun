// This file is auto-generated by @hey-api/openapi-ts

export const $ErrorDto = {
  type: ["object"],
  properties: {
    message: {
      type: ["string"],
    },
  },
  required: ["message"],
  title: "Error",
  description: "Error response",
} as const;

export const $LoginInputDto = {
  type: ["object"],
  properties: {
    email: {
      type: ["string"],
      format: "email",
    },
    password: {
      type: ["string"],
      minLength: 5,
    },
    source: {
      default: "web",
      type: ["string"],
      enum: ["mobile", "web"],
    },
  },
  required: ["email", "password"],
  title: "Auth Login",
  description: "Login with email and password",
} as const;

export const $LoginOutputDto = {
  type: ["object"],
  properties: {
    message: {
      type: ["string"],
    },
    redirect: {
      type: ["string"],
      format: "uri",
    },
    accessToken: {
      type: ["string"],
    },
  },
  required: ["message", "accessToken"],
  title: "Auth Login",
  description: "Login with email and password",
} as const;

export const $InititatePasswordResetInputDto = {
  type: ["object"],
  properties: {
    email: {
      type: ["string"],
      format: "email",
    },
  },
  required: ["email"],
  title: "Initiate Password Reset",
  description: "",
} as const;

export const $GenericMessageDto = {
  type: ["object"],
  properties: {
    message: {
      type: ["string"],
    },
  },
  required: ["message"],
  title: "Generic Message",
  description: "",
} as const;

export const $CompletePasswordResetInputDto = {
  type: ["object"],
  properties: {
    token: {
      type: ["string"],
    },
    password: {
      type: ["string"],
      minLength: 5,
    },
  },
  required: ["token", "password"],
  title: "Complete Password Reset",
  description: "",
} as const;

export const $CompleteUserOnboardingInputDto = {
  type: ["object"],
  properties: {
    token: {
      type: ["string"],
    },
    password: {
      type: ["string"],
      minLength: 5,
    },
  },
  required: ["token", "password"],
  title: "Complete Password Reset",
  description: "",
} as const;

export const $LinkOAuthAccountInputDto = {
  type: ["object"],
  properties: {
    token: {
      type: ["string"],
    },
  },
  required: ["token"],
  title: "Link OAuth Account",
  description: "",
} as const;

export const $UserOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          email: {
            type: ["string"],
            format: "email",
          },
          firstName: {
            type: ["string"],
          },
          lastName: {
            type: ["string"],
          },
          phone: {
            type: ["string"],
          },
          active: {
            type: ["boolean"],
          },
          address: {
            type: ["string"],
          },
          addressLat: {
            type: ["number"],
            minimum: -90,
            maximum: 90,
          },
          addressLng: {
            type: ["number"],
            minimum: -180,
            maximum: 180,
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "email",
          "firstName",
          "lastName",
          "phone",
          "active",
          "address",
          "addressLat",
          "addressLng",
          "createdAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Users",
  description: "Paginate User records",
} as const;

export const $UserOutputManyDto = {
  type: ["array"],
  items: {
    type: ["object"],
    properties: {
      id: {
        type: ["string"],
      },
      email: {
        type: ["string"],
        format: "email",
      },
      firstName: {
        type: ["string"],
      },
      lastName: {
        type: ["string"],
      },
      phone: {
        type: ["string"],
      },
      active: {
        type: ["boolean"],
      },
      address: {
        type: ["string"],
      },
      addressLat: {
        type: ["number"],
        minimum: -90,
        maximum: 90,
      },
      addressLng: {
        type: ["number"],
        minimum: -180,
        maximum: 180,
      },
      createdAt: {
        type: ["string"],
        format: "date-time",
      },
    },
    required: [
      "id",
      "email",
      "firstName",
      "lastName",
      "phone",
      "active",
      "address",
      "addressLat",
      "addressLng",
      "createdAt",
    ],
  },
  title: "User",
  description: "List of User records",
} as const;

export const $UserMeOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    email: {
      type: ["string"],
      format: "email",
    },
    firstName: {
      type: ["string"],
    },
    lastName: {
      type: ["string"],
    },
    phone: {
      type: ["string"],
    },
    active: {
      type: ["boolean"],
    },
    address: {
      type: ["string"],
    },
    addressLat: {
      type: ["number"],
      minimum: -90,
      maximum: 90,
    },
    addressLng: {
      type: ["number"],
      minimum: -180,
      maximum: 180,
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
    outageInboundEmailAddress: {
      type: ["string"],
      format: "email",
    },
    features: {
      type: ["array"],
      items: {
        type: ["string"],
      },
    },
  },
  required: [
    "id",
    "email",
    "firstName",
    "lastName",
    "phone",
    "active",
    "address",
    "addressLat",
    "addressLng",
    "createdAt",
    "outageInboundEmailAddress",
    "features",
  ],
  title: "User",
  description: "User record",
} as const;

export const $UserOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    email: {
      type: ["string"],
      format: "email",
    },
    firstName: {
      type: ["string"],
    },
    lastName: {
      type: ["string"],
    },
    phone: {
      type: ["string"],
    },
    active: {
      type: ["boolean"],
    },
    address: {
      type: ["string"],
    },
    addressLat: {
      type: ["number"],
      minimum: -90,
      maximum: 90,
    },
    addressLng: {
      type: ["number"],
      minimum: -180,
      maximum: 180,
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "email",
    "firstName",
    "lastName",
    "phone",
    "active",
    "address",
    "addressLat",
    "addressLng",
    "createdAt",
  ],
  title: "User",
  description: "User record",
} as const;

export const $UserInputDto = {
  type: ["object"],
  properties: {
    email: {
      type: ["string"],
      format: "email",
    },
    firstName: {
      type: ["string"],
    },
    lastName: {
      type: ["string"],
    },
    phone: {
      type: ["string"],
    },
    active: {
      type: ["boolean"],
    },
    address: {
      type: ["string"],
    },
    addressLat: {
      type: ["number"],
      minimum: -90,
      maximum: 90,
    },
    addressLng: {
      type: ["number"],
      minimum: -180,
      maximum: 180,
    },
  },
  required: [
    "email",
    "firstName",
    "lastName",
    "phone",
    "active",
    "address",
    "addressLat",
    "addressLng",
  ],
  title: "User",
  description: "User record",
} as const;

export const $SiteOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          code: {
            type: ["string"],
          },
          name: {
            type: ["string"],
          },
          longitude: {
            type: ["number"],
            minimum: -180,
            maximum: 180,
          },
          latitude: {
            type: ["number"],
            minimum: -90,
            maximum: 90,
          },
          tags: {
            type: ["array"],
            items: {
              type: ["object"],
              properties: {
                id: {
                  type: ["string"],
                },
                name: {
                  type: ["string"],
                  minLength: 1,
                  maxLength: 10,
                },
                description: {
                  type: ["string"],
                },
                color: {
                  type: ["string"],
                },
                createdAt: {
                  type: ["string"],
                  format: "date-time",
                },
                updatedAt: {
                  type: ["string"],
                  format: "date-time",
                },
              },
              required: [
                "id",
                "name",
                "description",
                "color",
                "createdAt",
                "updatedAt",
              ],
            },
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "code",
          "name",
          "longitude",
          "latitude",
          "tags",
          "createdAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Sites",
  description: "Paginate Site records",
} as const;

export const $SiteGeoJSONDto = {
  type: ["object"],
  properties: {
    type: {
      type: ["string"],
      enum: ["FeatureCollection"],
    },
    features: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          type: {
            type: ["string"],
            enum: ["Feature"],
          },
          properties: {
            type: ["object"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              name: {
                type: ["string"],
              },
              tags: {
                type: ["array"],
                items: {
                  type: ["string"],
                },
              },
            },
            required: ["id", "code", "name", "tags"],
          },
          geometry: {
            type: ["object"],
            properties: {
              type: {
                type: ["string"],
                enum: ["Point"],
              },
              coordinates: {},
            },
            required: ["type", "coordinates"],
          },
        },
        required: ["type", "properties", "geometry"],
      },
    },
  },
  required: ["type", "features"],
  title: "SiteGeoJSON",
  description: "SiteGeoJSON record",
} as const;

export const $SiteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    code: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    longitude: {
      type: ["number"],
      minimum: -180,
      maximum: 180,
    },
    latitude: {
      type: ["number"],
      minimum: -90,
      maximum: 90,
    },
    tags: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
            minLength: 1,
            maxLength: 10,
          },
          description: {
            type: ["string"],
          },
          color: {
            type: ["string"],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
          updatedAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "name",
          "description",
          "color",
          "createdAt",
          "updatedAt",
        ],
      },
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "code",
    "name",
    "longitude",
    "latitude",
    "tags",
    "createdAt",
  ],
  title: "Site",
  description: "Site record",
} as const;

export const $ReadRouteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        firstName: {
          type: ["string"],
        },
        lastName: {
          type: ["string"],
        },
        email: {
          type: ["string"],
          format: "email",
        },
        address: {
          type: ["string"],
        },
        addressLng: {
          type: ["number"],
        },
        addressLat: {
          type: ["number"],
        },
      },
      required: [
        "id",
        "firstName",
        "lastName",
        "email",
        "address",
        "addressLng",
        "addressLat",
      ],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          site: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              latitude: {
                type: ["number"],
              },
              longitude: {
                type: ["number"],
              },
            },
            required: ["id", "code", "latitude", "longitude"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "site",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
    "createdAt",
  ],
  title: "Route",
  description: "A route for a vehicle to follow between sites",
} as const;

export const $OutageOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    externalId: {
      type: ["string", "null"],
    },
    planned: {
      type: ["boolean"],
    },
    plannedStart: {
      type: ["string"],
      format: "date-time",
    },
    plannedEnd: {
      type: ["string"],
      format: "date-time",
    },
    actualStart: {
      type: ["string", "null"],
      format: "date-time",
    },
    actualEnd: {
      type: ["string", "null"],
      format: "date-time",
    },
    estimatedEnd: {
      type: ["string", "null"],
      format: "date-time",
    },
    status: {
      type: ["string"],
      enum: ["DRAFT", "APPROVED", "REJECTED"],
    },
    reason: {
      type: ["string"],
    },
    physicalAddress: {
      type: ["string"],
    },
    icp: {
      type: ["string"],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
    siteId: {
      type: ["string", "null"],
    },
    site: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        code: {
          type: ["string"],
        },
        name: {
          type: ["string"],
        },
        longitude: {
          type: ["number"],
          minimum: -180,
          maximum: 180,
        },
        latitude: {
          type: ["number"],
          minimum: -90,
          maximum: 90,
        },
        createdAt: {
          type: ["string"],
          format: "date-time",
        },
      },
      required: ["id", "code", "name", "longitude", "latitude", "createdAt"],
    },
    emailSource: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        externalId: {
          type: ["string"],
        },
        to: {
          type: ["string"],
        },
        from: {
          type: ["string"],
        },
        subject: {
          type: ["string"],
        },
        textBody: {
          type: ["string"],
        },
        htmlBody: {
          type: ["string"],
        },
        sentAt: {
          type: ["string"],
          format: "date-time",
        },
        createdAt: {
          type: ["string"],
          format: "date-time",
        },
      },
      required: [
        "id",
        "externalId",
        "to",
        "from",
        "subject",
        "textBody",
        "htmlBody",
        "sentAt",
        "createdAt",
      ],
    },
    emailId: {
      type: ["string", "null"],
    },
  },
  required: [
    "id",
    "externalId",
    "planned",
    "plannedStart",
    "plannedEnd",
    "actualStart",
    "actualEnd",
    "estimatedEnd",
    "status",
    "reason",
    "physicalAddress",
    "icp",
    "createdAt",
    "siteId",
    "site",
    "emailSource",
    "emailId",
  ],
  title: "Outage",
  description: "Outage record",
} as const;

export const $SiteInputDto = {
  type: ["object"],
  properties: {
    code: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    longitude: {
      type: ["number"],
      minimum: -180,
      maximum: 180,
    },
    latitude: {
      type: ["number"],
      minimum: -90,
      maximum: 90,
    },
    tags: {
      type: ["array"],
      items: {
        type: ["string"],
      },
    },
  },
  required: ["code", "name", "longitude", "latitude", "tags"],
  title: "Site",
  description: "Site record",
} as const;

export const $OutageInputDto = {
  type: ["object"],
  properties: {
    externalId: {
      type: ["string", "null"],
    },
    planned: {
      type: ["boolean"],
    },
    plannedStart: {
      type: ["string"],
      format: "date-time",
    },
    plannedEnd: {
      type: ["string"],
      format: "date-time",
    },
    actualStart: {
      type: ["string", "null"],
      format: "date-time",
    },
    actualEnd: {
      type: ["string", "null"],
      format: "date-time",
    },
    estimatedEnd: {
      type: ["string", "null"],
      format: "date-time",
    },
    status: {
      type: ["string"],
      enum: ["DRAFT", "APPROVED", "REJECTED"],
    },
    reason: {
      type: ["string"],
    },
    physicalAddress: {
      type: ["string"],
    },
    icp: {
      type: ["string"],
    },
    siteId: {
      type: ["string", "null"],
    },
    emailId: {
      type: ["string", "null"],
    },
  },
  required: [
    "externalId",
    "planned",
    "plannedStart",
    "plannedEnd",
    "actualStart",
    "actualEnd",
    "estimatedEnd",
    "status",
    "reason",
    "physicalAddress",
    "icp",
    "siteId",
    "emailId",
  ],
  title: "Outage",
  description: "Outage record",
} as const;

export const $OutageOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          externalId: {
            type: ["string", "null"],
          },
          planned: {
            type: ["boolean"],
          },
          plannedStart: {
            type: ["string"],
            format: "date-time",
          },
          plannedEnd: {
            type: ["string"],
            format: "date-time",
          },
          actualStart: {
            type: ["string", "null"],
            format: "date-time",
          },
          actualEnd: {
            type: ["string", "null"],
            format: "date-time",
          },
          estimatedEnd: {
            type: ["string", "null"],
            format: "date-time",
          },
          status: {
            type: ["string"],
            enum: ["DRAFT", "APPROVED", "REJECTED"],
          },
          reason: {
            type: ["string"],
          },
          physicalAddress: {
            type: ["string"],
          },
          icp: {
            type: ["string"],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
          siteId: {
            type: ["string", "null"],
          },
          site: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              name: {
                type: ["string"],
              },
              longitude: {
                type: ["number"],
                minimum: -180,
                maximum: 180,
              },
              latitude: {
                type: ["number"],
                minimum: -90,
                maximum: 90,
              },
              createdAt: {
                type: ["string"],
                format: "date-time",
              },
            },
            required: [
              "id",
              "code",
              "name",
              "longitude",
              "latitude",
              "createdAt",
            ],
          },
          emailSource: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              externalId: {
                type: ["string"],
              },
              to: {
                type: ["string"],
              },
              from: {
                type: ["string"],
              },
              subject: {
                type: ["string"],
              },
              textBody: {
                type: ["string"],
              },
              htmlBody: {
                type: ["string"],
              },
              sentAt: {
                type: ["string"],
                format: "date-time",
              },
              createdAt: {
                type: ["string"],
                format: "date-time",
              },
            },
            required: [
              "id",
              "externalId",
              "to",
              "from",
              "subject",
              "textBody",
              "htmlBody",
              "sentAt",
              "createdAt",
            ],
          },
          emailId: {
            type: ["string", "null"],
          },
        },
        required: [
          "id",
          "externalId",
          "planned",
          "plannedStart",
          "plannedEnd",
          "actualStart",
          "actualEnd",
          "estimatedEnd",
          "status",
          "reason",
          "physicalAddress",
          "icp",
          "createdAt",
          "siteId",
          "site",
          "emailSource",
          "emailId",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Outages",
  description: "Paginate Outage records",
} as const;

export const $PublicOutageOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          externalId: {
            type: ["string"],
          },
          externalRef: {
            type: ["string"],
          },
          planned: {
            type: ["boolean"],
          },
          plannedStart: {
            type: ["string"],
            format: "date-time",
          },
          plannedEnd: {
            type: ["string"],
            format: "date-time",
          },
          altPlannedStart: {
            type: ["string", "null"],
            format: "date-time",
          },
          altPlannedEnd: {
            type: ["string", "null"],
            format: "date-time",
          },
          actualStart: {
            type: ["string", "null"],
            format: "date-time",
          },
          actualEnd: {
            type: ["string", "null"],
            format: "date-time",
          },
          estimatedEnd: {
            type: ["string", "null"],
            format: "date-time",
          },
          reason: {
            type: ["string"],
          },
          physicalAddress: {
            type: ["string"],
          },
          provider: {
            type: ["string"],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
          updatedAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "externalId",
          "externalRef",
          "planned",
          "plannedStart",
          "plannedEnd",
          "altPlannedStart",
          "altPlannedEnd",
          "actualStart",
          "actualEnd",
          "estimatedEnd",
          "reason",
          "physicalAddress",
          "provider",
          "createdAt",
          "updatedAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "PublicOutages",
  description: "Paginate PublicOutage records",
} as const;

export const $OutageSummaryOutputDto = {
  type: ["object"],
  properties: {
    draft: {
      type: ["number"],
    },
    approved: {
      type: ["number"],
    },
    rejected: {
      type: ["number"],
    },
    upcoming24Hours: {
      type: ["number"],
    },
    upcoming7Days: {
      type: ["number"],
    },
    emails60Days: {
      type: ["number"],
    },
  },
  required: [
    "draft",
    "approved",
    "rejected",
    "upcoming24Hours",
    "upcoming7Days",
    "emails60Days",
  ],
  title: "OutageSummary",
  description: "Outage Summary record",
} as const;

export const $EmailWebhookOutputDto = {
  type: ["object"],
  properties: {
    message: {
      type: ["string"],
    },
  },
  required: ["message"],
  title: "PostmarkEmail",
  description: "Public Outage record",
} as const;

export const $EmailWebhookInputDto = {
  type: ["object"],
  properties: {
    FromName: {
      type: ["string"],
    },
    MessageStream: {
      type: ["string"],
    },
    From: {
      type: ["string"],
    },
    FromFull: {
      type: ["object"],
      properties: {
        Email: {
          type: ["string"],
        },
        Name: {
          type: ["string"],
        },
        MailboxHash: {
          type: ["string"],
        },
      },
      required: ["Email", "Name", "MailboxHash"],
    },
    To: {
      type: ["string"],
    },
    ToFull: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          Email: {
            type: ["string"],
          },
          Name: {
            type: ["string"],
          },
          MailboxHash: {
            type: ["string"],
          },
        },
        required: ["Email", "Name", "MailboxHash"],
      },
    },
    Cc: {
      type: ["string"],
    },
    CcFull: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          Email: {
            type: ["string"],
          },
          Name: {
            type: ["string"],
          },
          MailboxHash: {
            type: ["string"],
          },
        },
        required: ["Email", "Name", "MailboxHash"],
      },
    },
    Bcc: {
      type: ["string"],
    },
    BccFull: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          Email: {
            type: ["string"],
          },
          Name: {
            type: ["string"],
          },
          MailboxHash: {
            type: ["string"],
          },
        },
        required: ["Email", "Name", "MailboxHash"],
      },
    },
    OriginalRecipient: {
      type: ["string"],
    },
    Subject: {
      type: ["string"],
    },
    MessageID: {
      type: ["string"],
    },
    ReplyTo: {
      type: ["string"],
    },
    MailboxHash: {
      type: ["string"],
    },
    Date: {
      type: ["string"],
    },
    TextBody: {
      type: ["string"],
    },
    HtmlBody: {
      type: ["string"],
    },
    StrippedTextReply: {
      type: ["string"],
    },
    Tag: {
      type: ["string"],
    },
    Headers: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          Name: {
            type: ["string"],
          },
          Value: {
            type: ["string"],
          },
        },
        required: ["Name", "Value"],
      },
    },
    Attachments: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          Name: {
            type: ["string"],
          },
          Content: {
            type: ["string"],
          },
          ContentType: {
            type: ["string"],
          },
          ContentLength: {
            type: ["number"],
          },
        },
        required: ["Name", "Content", "ContentType", "ContentLength"],
      },
    },
  },
  required: [
    "FromName",
    "MessageStream",
    "From",
    "FromFull",
    "To",
    "ToFull",
    "Cc",
    "CcFull",
    "Bcc",
    "BccFull",
    "OriginalRecipient",
    "Subject",
    "MessageID",
    "ReplyTo",
    "MailboxHash",
    "Date",
    "TextBody",
    "HtmlBody",
    "StrippedTextReply",
    "Tag",
    "Headers",
    "Attachments",
  ],
  title: "PostmarkEmail",
  description: "Public Outage record",
} as const;

export const $NoteInputDto = {
  type: ["object"],
  properties: {
    text: {
      type: ["string"],
    },
    userId: {
      type: ["string"],
    },
  },
  required: ["text", "userId"],
  title: "Note",
  description: "Note record",
} as const;

export const $NoteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    text: {
      type: ["string"],
    },
    user: {
      type: ["object"],
      properties: {
        id: {
          type: ["string"],
        },
        email: {
          type: ["string"],
          format: "email",
        },
        firstName: {
          type: ["string"],
        },
        lastName: {
          type: ["string"],
        },
        phone: {
          type: ["string"],
        },
        active: {
          type: ["boolean"],
        },
        address: {
          type: ["string"],
        },
        addressLat: {
          type: ["number"],
          minimum: -90,
          maximum: 90,
        },
        addressLng: {
          type: ["number"],
          minimum: -180,
          maximum: 180,
        },
        createdAt: {
          type: ["string"],
          format: "date-time",
        },
      },
      required: [
        "id",
        "email",
        "firstName",
        "lastName",
        "phone",
        "active",
        "address",
        "addressLat",
        "addressLng",
        "createdAt",
      ],
    },
    userId: {
      type: ["string"],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
    updatedAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: ["id", "text", "user", "userId", "createdAt", "updatedAt"],
  title: "Note",
  description: "Note record",
} as const;

export const $ReadManyRouteOutputDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          returnDistance: {
            type: ["number"],
          },
          returnDuration: {
            type: ["number"],
          },
          assignee: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              firstName: {
                type: ["string"],
              },
              lastName: {
                type: ["string"],
              },
              email: {
                type: ["string"],
                format: "email",
              },
              address: {
                type: ["string"],
              },
              addressLng: {
                type: ["number"],
              },
              addressLat: {
                type: ["number"],
              },
            },
            required: [
              "id",
              "firstName",
              "lastName",
              "email",
              "address",
              "addressLng",
              "addressLat",
            ],
          },
          loop: {
            type: ["boolean"],
          },
          stops: {
            type: ["array"],
            items: {
              type: ["object"],
              properties: {
                id: {
                  type: ["string"],
                },
                distance: {
                  type: ["number"],
                },
                duration: {
                  type: ["number"],
                },
                siteId: {
                  type: ["string", "null"],
                },
                site: {
                  type: ["object", "null"],
                  properties: {
                    id: {
                      type: ["string"],
                    },
                    code: {
                      type: ["string"],
                    },
                    latitude: {
                      type: ["number"],
                    },
                    longitude: {
                      type: ["number"],
                    },
                  },
                  required: ["id", "code", "latitude", "longitude"],
                },
                label: {
                  type: ["string"],
                },
                latitude: {
                  type: ["number"],
                },
                longitude: {
                  type: ["number"],
                },
              },
              required: [
                "id",
                "distance",
                "duration",
                "siteId",
                "site",
                "label",
                "latitude",
                "longitude",
              ],
            },
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "name",
          "distance",
          "duration",
          "returnDistance",
          "returnDuration",
          "assignee",
          "loop",
          "stops",
          "createdAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Routes",
  description: "Paginate route records",
} as const;

export const $CreateRouteInputDto = {
  type: ["object"],
  properties: {
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      oneOf: [
        {
          type: ["object"],
          properties: {
            id: {
              type: ["string", "null"],
              enum: ["null"],
            },
            firstName: {
              type: ["string"],
            },
            lastName: {
              type: ["string"],
            },
            email: {
              type: ["string"],
              format: "email",
            },
            address: {
              type: ["string"],
            },
            addressLng: {
              type: ["number"],
            },
            addressLat: {
              type: ["number"],
            },
          },
          required: [
            "id",
            "firstName",
            "lastName",
            "email",
            "address",
            "addressLng",
            "addressLat",
          ],
        },
        {
          type: ["object"],
          properties: {
            id: {
              type: ["string"],
            },
          },
          required: ["id"],
        },
      ],
      type: ["null"],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
  },
  required: [
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
  ],
} as const;

export const $CreateRouteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        firstName: {
          type: ["string"],
        },
        lastName: {
          type: ["string"],
        },
        email: {
          type: ["string"],
          format: "email",
        },
        address: {
          type: ["string"],
        },
        addressLng: {
          type: ["number"],
        },
        addressLat: {
          type: ["number"],
        },
      },
      required: [
        "id",
        "firstName",
        "lastName",
        "email",
        "address",
        "addressLng",
        "addressLat",
      ],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
    "createdAt",
  ],
} as const;

export const $UpdateRouteInputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      oneOf: [
        {
          type: ["object"],
          properties: {
            id: {
              type: ["string", "null"],
              enum: ["null"],
            },
            firstName: {
              type: ["string"],
            },
            lastName: {
              type: ["string"],
            },
            email: {
              type: ["string"],
              format: "email",
            },
            address: {
              type: ["string"],
            },
            addressLng: {
              type: ["number"],
            },
            addressLat: {
              type: ["number"],
            },
          },
          required: [
            "id",
            "firstName",
            "lastName",
            "email",
            "address",
            "addressLng",
            "addressLat",
          ],
        },
        {
          type: ["object"],
          properties: {
            id: {
              type: ["string"],
            },
          },
          required: ["id"],
        },
      ],
      type: ["null"],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
  },
  required: [
    "id",
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
  ],
} as const;

export const $UpdateRouteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        firstName: {
          type: ["string"],
        },
        lastName: {
          type: ["string"],
        },
        email: {
          type: ["string"],
          format: "email",
        },
        address: {
          type: ["string"],
        },
        addressLng: {
          type: ["number"],
        },
        addressLat: {
          type: ["number"],
        },
      },
      required: [
        "id",
        "firstName",
        "lastName",
        "email",
        "address",
        "addressLng",
        "addressLat",
      ],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          site: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              latitude: {
                type: ["number"],
              },
              longitude: {
                type: ["number"],
              },
            },
            required: ["id", "code", "latitude", "longitude"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "site",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
    "createdAt",
  ],
  title: "Route",
  description: "A route for a vehicle to follow between sites",
} as const;

export const $DeleteRouteOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    distance: {
      type: ["number"],
    },
    duration: {
      type: ["number"],
    },
    returnDistance: {
      type: ["number"],
    },
    returnDuration: {
      type: ["number"],
    },
    assignee: {
      type: ["object", "null"],
      properties: {
        id: {
          type: ["string"],
        },
        firstName: {
          type: ["string"],
        },
        lastName: {
          type: ["string"],
        },
        email: {
          type: ["string"],
          format: "email",
        },
        address: {
          type: ["string"],
        },
        addressLng: {
          type: ["number"],
        },
        addressLat: {
          type: ["number"],
        },
      },
      required: [
        "id",
        "firstName",
        "lastName",
        "email",
        "address",
        "addressLng",
        "addressLat",
      ],
    },
    loop: {
      type: ["boolean"],
    },
    stops: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          distance: {
            type: ["number"],
          },
          duration: {
            type: ["number"],
          },
          siteId: {
            type: ["string", "null"],
          },
          site: {
            type: ["object", "null"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              latitude: {
                type: ["number"],
              },
              longitude: {
                type: ["number"],
              },
            },
            required: ["id", "code", "latitude", "longitude"],
          },
          label: {
            type: ["string"],
          },
          latitude: {
            type: ["number"],
          },
          longitude: {
            type: ["number"],
          },
        },
        required: [
          "id",
          "distance",
          "duration",
          "siteId",
          "site",
          "label",
          "latitude",
          "longitude",
        ],
      },
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "name",
    "distance",
    "duration",
    "returnDistance",
    "returnDuration",
    "assignee",
    "loop",
    "stops",
    "createdAt",
  ],
  title: "Route",
  description: "A route for a vehicle to follow between sites",
} as const;

export const $DeviceOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
            minLength: 1,
          },
          siteId: {
            type: ["string"],
            minLength: 1,
          },
          site: {
            type: ["object"],
            properties: {
              id: {
                type: ["string"],
              },
              code: {
                type: ["string"],
              },
              name: {
                type: ["string"],
              },
              longitude: {
                type: ["number"],
                minimum: -180,
                maximum: 180,
              },
              latitude: {
                type: ["number"],
                minimum: -90,
                maximum: 90,
              },
              createdAt: {
                type: ["string"],
                format: "date-time",
              },
            },
            required: [
              "id",
              "code",
              "name",
              "longitude",
              "latitude",
              "createdAt",
            ],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
          ipAddress: {
            type: ["string", "null"],
          },
          port: {
            type: ["integer", "null"],
            exclusiveMinimum: 0,
          },
          username: {
            type: ["string", "null"],
          },
          password: {
            type: ["string", "null"],
          },
          protocol: {
            type: ["string", "null"],
            enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
          },
          active: {
            type: ["boolean"],
          },
        },
        required: [
          "id",
          "name",
          "siteId",
          "site",
          "createdAt",
          "ipAddress",
          "port",
          "username",
          "password",
          "protocol",
          "active",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Devices",
  description: "Paginate Device records",
} as const;

export const $DeviceOutputManyDto = {
  type: ["array"],
  items: {
    type: ["object"],
    properties: {
      id: {
        type: ["string"],
      },
      name: {
        type: ["string"],
        minLength: 1,
      },
      siteId: {
        type: ["string"],
        minLength: 1,
      },
      site: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          code: {
            type: ["string"],
          },
          name: {
            type: ["string"],
          },
          longitude: {
            type: ["number"],
            minimum: -180,
            maximum: 180,
          },
          latitude: {
            type: ["number"],
            minimum: -90,
            maximum: 90,
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: ["id", "code", "name", "longitude", "latitude", "createdAt"],
      },
      createdAt: {
        type: ["string"],
        format: "date-time",
      },
      ipAddress: {
        type: ["string", "null"],
      },
      port: {
        type: ["integer", "null"],
        exclusiveMinimum: 0,
      },
      username: {
        type: ["string", "null"],
      },
      password: {
        type: ["string", "null"],
      },
      protocol: {
        type: ["string", "null"],
        enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
      },
      active: {
        type: ["boolean"],
      },
    },
    required: [
      "id",
      "name",
      "siteId",
      "site",
      "createdAt",
      "ipAddress",
      "port",
      "username",
      "password",
      "protocol",
      "active",
    ],
  },
  title: "Device",
  description: "List of Device records",
} as const;

export const $DeviceOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
      minLength: 1,
    },
    siteId: {
      type: ["string"],
      minLength: 1,
    },
    site: {
      type: ["object"],
      properties: {
        id: {
          type: ["string"],
        },
        code: {
          type: ["string"],
        },
        name: {
          type: ["string"],
        },
        longitude: {
          type: ["number"],
          minimum: -180,
          maximum: 180,
        },
        latitude: {
          type: ["number"],
          minimum: -90,
          maximum: 90,
        },
        createdAt: {
          type: ["string"],
          format: "date-time",
        },
      },
      required: ["id", "code", "name", "longitude", "latitude", "createdAt"],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
    ipAddress: {
      type: ["string", "null"],
    },
    port: {
      type: ["integer", "null"],
      exclusiveMinimum: 0,
    },
    username: {
      type: ["string", "null"],
    },
    password: {
      type: ["string", "null"],
    },
    protocol: {
      type: ["string", "null"],
      enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
    },
    active: {
      type: ["boolean"],
    },
  },
  required: [
    "id",
    "name",
    "siteId",
    "site",
    "createdAt",
    "ipAddress",
    "port",
    "username",
    "password",
    "protocol",
    "active",
  ],
  title: "Device",
  description: "Device record",
} as const;

export const $DeviceInputDto = {
  type: ["object"],
  properties: {
    name: {
      type: ["string"],
      minLength: 1,
    },
    siteId: {
      type: ["string"],
      minLength: 1,
    },
    ipAddress: {
      type: ["string", "null"],
    },
    port: {
      type: ["integer", "null"],
      exclusiveMinimum: 0,
    },
    username: {
      type: ["string", "null"],
    },
    password: {
      type: ["string", "null"],
    },
    protocol: {
      type: ["string", "null"],
      enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
    },
    active: {
      type: ["boolean"],
    },
  },
  required: [
    "name",
    "siteId",
    "ipAddress",
    "port",
    "username",
    "password",
    "protocol",
    "active",
  ],
  title: "Device",
  description: "Device record",
} as const;

export const $MapOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
          },
          styleLight: {
            type: ["string"],
          },
          styleDark: {
            type: ["string"],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: ["id", "name", "styleLight", "styleDark", "createdAt"],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Maps",
  description: "Paginate Map records",
} as const;

export const $MapOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
    },
    styleLight: {
      type: ["string"],
    },
    styleDark: {
      type: ["string"],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: ["id", "name", "styleLight", "styleDark", "createdAt"],
  title: "Map",
  description: "Map record",
} as const;

export const $MapInputDto = {
  type: ["object"],
  properties: {
    name: {
      type: ["string"],
    },
    styleLight: {
      type: ["string"],
    },
    styleDark: {
      type: ["string"],
    },
  },
  required: ["name", "styleLight", "styleDark"],
  title: "Map",
  description: "Map record",
} as const;

export const $AlarmOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
            minLength: 1,
          },
          description: {
            type: ["string"],
          },
          severity: {
            type: ["number"],
          },
          onAt: {
            type: ["string"],
            format: "date-time",
          },
          offAt: {
            type: ["string", "null"],
            format: "date-time",
          },
          deviceId: {
            type: ["string"],
            minLength: 1,
          },
          device: {
            type: ["object"],
            properties: {
              id: {
                type: ["string"],
              },
              name: {
                type: ["string"],
                minLength: 1,
              },
              siteId: {
                type: ["string"],
                minLength: 1,
              },
              createdAt: {
                type: ["string"],
                format: "date-time",
              },
              ipAddress: {
                type: ["string", "null"],
              },
              port: {
                type: ["integer", "null"],
                exclusiveMinimum: 0,
              },
              username: {
                type: ["string", "null"],
              },
              password: {
                type: ["string", "null"],
              },
              protocol: {
                type: ["string", "null"],
                enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
              },
              active: {
                type: ["boolean"],
              },
            },
            required: [
              "id",
              "name",
              "siteId",
              "createdAt",
              "ipAddress",
              "port",
              "username",
              "password",
              "protocol",
              "active",
            ],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "name",
          "description",
          "severity",
          "onAt",
          "offAt",
          "deviceId",
          "device",
          "createdAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Alarms",
  description: "Paginate Alarm records",
} as const;

export const $AlarmOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
      minLength: 1,
    },
    description: {
      type: ["string"],
    },
    severity: {
      type: ["number"],
    },
    onAt: {
      type: ["string"],
      format: "date-time",
    },
    offAt: {
      type: ["string", "null"],
      format: "date-time",
    },
    deviceId: {
      type: ["string"],
      minLength: 1,
    },
    device: {
      type: ["object"],
      properties: {
        id: {
          type: ["string"],
        },
        name: {
          type: ["string"],
          minLength: 1,
        },
        siteId: {
          type: ["string"],
          minLength: 1,
        },
        createdAt: {
          type: ["string"],
          format: "date-time",
        },
        ipAddress: {
          type: ["string", "null"],
        },
        port: {
          type: ["integer", "null"],
          exclusiveMinimum: 0,
        },
        username: {
          type: ["string", "null"],
        },
        password: {
          type: ["string", "null"],
        },
        protocol: {
          type: ["string", "null"],
          enum: ["SNMP_V1", "SNMP_V2C", "SNMP_V3", "MQTT_V5"],
        },
        active: {
          type: ["boolean"],
        },
      },
      required: [
        "id",
        "name",
        "siteId",
        "createdAt",
        "ipAddress",
        "port",
        "username",
        "password",
        "protocol",
        "active",
      ],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: [
    "id",
    "name",
    "description",
    "severity",
    "onAt",
    "offAt",
    "deviceId",
    "device",
    "createdAt",
  ],
  title: "Alarm",
  description: "Alarm record",
} as const;

export const $AlarmInputDto = {
  type: ["object"],
  properties: {
    name: {
      type: ["string"],
      minLength: 1,
    },
    description: {
      type: ["string"],
    },
    severity: {
      type: ["number"],
    },
    onAt: {
      type: ["string"],
      format: "date-time",
    },
    offAt: {
      type: ["string", "null"],
      format: "date-time",
    },
    deviceId: {
      type: ["string"],
      minLength: 1,
    },
  },
  required: ["name", "description", "severity", "onAt", "offAt", "deviceId"],
  title: "Alarm",
  description: "Alarm record",
} as const;

export const $TagOutputPageDto = {
  type: ["object"],
  properties: {
    page: {},
    recordsPerPage: {},
    totalRecords: {
      type: ["integer"],
      minimum: 0,
    },
    records: {
      type: ["array"],
      items: {
        type: ["object"],
        properties: {
          id: {
            type: ["string"],
          },
          name: {
            type: ["string"],
            minLength: 1,
            maxLength: 10,
          },
          description: {
            type: ["string"],
          },
          color: {
            type: ["string"],
          },
          createdAt: {
            type: ["string"],
            format: "date-time",
          },
          updatedAt: {
            type: ["string"],
            format: "date-time",
          },
        },
        required: [
          "id",
          "name",
          "description",
          "color",
          "createdAt",
          "updatedAt",
        ],
      },
    },
  },
  required: ["totalRecords", "records"],
  title: "Tags",
  description: "Paginate Tag records",
} as const;

export const $TagOutputDto = {
  type: ["object"],
  properties: {
    id: {
      type: ["string"],
    },
    name: {
      type: ["string"],
      minLength: 1,
      maxLength: 10,
    },
    description: {
      type: ["string"],
    },
    color: {
      type: ["string"],
    },
    createdAt: {
      type: ["string"],
      format: "date-time",
    },
    updatedAt: {
      type: ["string"],
      format: "date-time",
    },
  },
  required: ["id", "name", "description", "color", "createdAt", "updatedAt"],
  title: "Tag",
  description: "Tag record",
} as const;

export const $TagInputDto = {
  type: ["object"],
  properties: {
    name: {
      type: ["string"],
      minLength: 1,
      maxLength: 10,
    },
    description: {
      type: ["string"],
    },
    color: {
      type: ["string"],
    },
  },
  required: ["name", "description", "color"],
  title: "Tag",
  description: "Tag record",
} as const;

export const $MetricOutputDto = {
  type: ["object"],
  properties: {
    period: {
      type: ["string", "null"],
      format: "date-time",
    },
    acVoltage: {
      type: ["number", "null"],
    },
    busVoltage: {
      type: ["number", "null"],
    },
    loadCurrent: {
      type: ["number", "null"],
    },
    rectifierCurrent: {
      type: ["number", "null"],
    },
    batteryCurrent: {
      type: ["number", "null"],
    },
    batteryTemperature: {
      type: ["number", "null"],
    },
    batteryRuntime: {
      type: ["number", "null"],
    },
    batteryPercentage: {
      type: ["number", "null"],
    },
    solarCurrent: {
      type: ["number", "null"],
    },
    solarPower: {
      type: ["number", "null"],
    },
    deviceId: {
      type: ["string"],
    },
  },
  required: [
    "period",
    "acVoltage",
    "busVoltage",
    "loadCurrent",
    "rectifierCurrent",
    "batteryCurrent",
    "batteryTemperature",
    "batteryRuntime",
    "batteryPercentage",
    "solarCurrent",
    "solarPower",
    "deviceId",
  ],
  title: "Metric",
  description: "Metric record",
} as const;
